/*!
URI: https://github.com:ucsc/ucsc-localist-silk-wrapper.git
Author: UC Santa Cruz Communications & Marketing
Author URI: https://www.ucsc.edu
Description: Custom styles for UC Santa Cruz Localist Silk Wrapper
Version: 1.0.0
License: GNU General Public License v2 or later
License URI: LICENSE
*/
html {
  box-sizing: border-box;
}

*, *::after, *::before {
  box-sizing: inherit;
}

.search .search_action {
  width: 200px;
}

@media screen and (max-width: 767px) {
  .search .search_action {
    width: 100%;
  }
}

.search .search_action #top-search {
  margin-bottom: 0px !important;
}

#top-search {
  background-color: #fff;
}

@media screen and (max-width: 767px) {
  #top-search {
    width: 100%;
  }
}

#top-submit {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

.secondary-name {
  float: left;
  padding-right: 0 !important;
}

@media screen and (max-width: 767px) {
  .secondary-name .title-medium {
    padding-right: 0px !important;
  }
}

.user-login {
  float: right;
}

@media screen and (max-width: 959px) {
  .user-login #menu .action_menu {
    top: 0px !important;
    right: 0px !important;
  }
}

.hamburger .mobile-menu {
  display: none;
}

@media screen and (max-width: 767px) {
  .hamburger .mobile-menu {
    overflow: hidden;
    text-indent: 101%;
    white-space: nowrap;
    background-color: #003c6c;
    position: absolute;
    right: 20px;
    margin-top: -35px;
    font-weight: 300;
    padding: 10px;
    display: block;
    width: 40px;
    height: 40px;
  }
}

.hamburger .mobile-menu:focus, .hamburger .mobile-menu:hover, .hamburger .mobile-menu:active {
  background-color: #222;
}

#main .row .alpha {
  padding: 0 15px 0 0;
  padding: 0 1.071em 0 0;
}

#main .row .omega {
  padding: 53px 0 0 15px;
  padding: 3.786em 0 0 1.071em;
}

.main .featured_carousel .featured_item_wrapper .item img {
  margin: 0;
}

.topbutton {
  height: 50px;
  width: 50px;
  position: fixed;
  right: 15px;
  bottom: 30px;
  z-index: 99999;
  background-repeat: no-repeat;
  display: none !important;
}

.topbutton .fa {
  color: #fff;
  background-color: #fdc700;
  padding: 0 5px 5px;
  border-radius: 50%;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
